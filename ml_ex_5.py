# -*- coding: utf-8 -*-
"""ML-Ex-5

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16R7wjeO6JPWmCkrSgzUFxr796o63Qgvb
"""

import numpy as np
import matplotlib.pyplot as plt

X = np.linspace(0,1,12)
y = np.array([1.5,1.6, 1.7,2.371, 2.35,2.25,2.3,1.88,1.6,1.79,1.07,0.21])

plt.scatter(X,y)
p1=np.polyfit(X,y,1)

plt.plot(X, np.polyval(p1,X), c='r')
plt.title('Linear model is underfit')
plt.xlabel('X')
plt.ylabel('y')

plt.scatter(X,y)
p1=np.polyfit(X,y,1)
plt.plot(X, np.polyval(p1,X), c='r')
plt.title('Linear model is underfit')
plt.xlabel('X')
plt.ylabel('y')

import numpy as np
import matplotlib.pyplot as plt

X = np.linspace(0,1,12)
y = np.array([1.5,1.6, 1.7,2.371, 2.35,2.25,2.3,1.88,1.6,1.79,1.07,0.21])

plt.scatter(X,y)
p1=np.polyfit(X,y,10)

plt.plot(X, np.polyval(p1,X), c='r')
plt.title('Linear model is underfit')
plt.xlabel('X')
plt.ylabel('y')

plt.scatter(X,y)
p1=np.polyfit(X,y,10)
plt.plot(X, np.polyval(p1,X), c='r')
plt.title('Linear model is underfit')
plt.xlabel('X')
plt.ylabel('y')

"""#**Variance**"""

import numpy as np
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

from sklearn.datasets import load_diabetes
diabetes = load_diabetes()
X, y = diabetes.data[:, np.newaxis, 2], diabetes.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print(X)
from sklearn import linear_model
from sklearn.metrics import mean_squared_error

reg=linear_model.LinearRegression()
reg.fit(X_train, y_train)
predict_y=reg.predict(X_test)
accuracy=mean_squared_error(y_test, predict_y)
accuracy

"""#**Remove Duplicates**"""

import pandas as pd
from sklearn.datasets import load_iris

iris = load_iris()
data = pd.DataFrame(data=iris.data, columns=iris.feature_names)
data['target'] = iris.target

data = pd.concat([data, data.iloc[:5]], ignore_index=True)

print("Original Dataset:")
print(data.head(10))

data_no_duplicates = data.drop_duplicates()

print("\nDataset After Removing Duplicates:")
print(data_no_duplicates.head(10))

"""#**Cross Validation**"""

import numpy as np

from sklearn.model_selection import KFold
from sklearn.model_selection import cross_val_score
from sklearn.linear_model import LinearRegression
from sklearn.datasets import load_diabetes

X, y = diabetes.data, diabetes.target
model = LinearRegression()
k = 5
kf = KFold(n_splits=k, shuffle=True, random_state=42)
cross_val_scores = cross_val_score(model, X, y, cv=kf, scoring='neg_mean_squared_error')
cross_val_scores = -cross_val_scores

print(f'Cross-Validation Scores (Negative MSE): {cross_val_scores}')
print(f'Mean Cross-Validation Score: {np.mean(cross_val_scores):.2f}')